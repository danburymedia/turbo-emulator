#![allow(dead_code, unused_variables)]

use jit::extract::{extract32, sextract32};
use crate::armv8::decodedefs::*;

// todo: change back to return false;
pub trait Arm64DecodeTrait {
    fn has_mte_feat(&mut self) -> bool { panic!(); }
    fn has_pauth_feat(&mut self) -> bool { panic!(); }
    fn has_lse_feat(&mut self) -> bool { panic!(); }
    fn has_lor_feat(&mut self) -> bool { panic!(); }
    fn has_tme_feat(&mut self) -> bool { panic!(); }
    fn has_sxs_feat(&mut self) -> bool { panic!(); }
    fn has_frints_feat(&mut self) -> bool { panic!(); }
    fn has_bf16(&mut self) -> bool { panic!(); }
    fn has_fp16(&mut self) -> bool { panic!(); }
    fn has_i8mm(&mut self) -> bool { panic!(); }
    fn has_dotprod(&mut self) -> bool { panic!(); }
    fn has_rdm(&mut self) -> bool { panic!(); }
    fn has_fcma(&mut self) -> bool { panic!(); }
    fn has_frintts(&mut self) -> bool { panic!(); }
    fn has_fhm(&mut self) -> bool { panic!(); }
    fn has_jscvt(&mut self) -> bool { panic!(); }
    fn has_sm3(&mut self) -> bool { panic!(); }
    fn has_lrcpc2(&mut self) -> bool { panic!(); }
    fn has_flagm(&mut self) -> bool { panic!(); }
    fn has_flagm2(&mut self) -> bool { panic!(); }

    fn has_sha512(&mut self) -> bool { panic!(); }
    fn has_shm4(&mut self) -> bool { panic!(); }
    fn has_mte2_feat(&mut self) -> bool { panic!(); }
    fn abs_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adcs(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn addg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn addhn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn addp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn addp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adds_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adds_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adds_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn addv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn add_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn add_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn add_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn add_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn adrp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn aesd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn aese_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn aesimc_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn aesmc_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ands_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ands_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn and_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn and_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn and_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn asrv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn asr_asrv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn asr_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn at_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn autda(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn autdb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn autia(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn autib(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn axflag(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bcax_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfcvtn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfcvt_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfc_bfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfdot_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfdot_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfi_bfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfmlal_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfmlal_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfmmla_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bfxil_bfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bics(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bic_advsimd_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bic_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bic_and_z_zi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bic_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bif_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bit_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn blr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn blra(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn br(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bra(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn brk(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bsl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn bti(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn b_cond(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn b_uncond(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cas(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn casb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cash(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn casp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cbnz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cbz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ccmn_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ccmn_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ccmp_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ccmp_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cfinv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cfp_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cinc_csinc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cinv_csinv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn clrex(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cls_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cls_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn clz_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn clz_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmeq_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmeq_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmge_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmge_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmgt_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmgt_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmhi_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmhs_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmle_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmlt_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmn_adds_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmn_adds_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmn_adds_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmple_cmpeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmplo_cmpeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmpls_cmpeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmplt_cmpeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmpp_subps(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmp_subs_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmp_subs_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmp_subs_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cmtst_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cneg_csneg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cnt_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cpp_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn crc32(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn crc32c(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csdb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csel(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csetm_csinv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn cset_csinc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csinc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csinv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn csneg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dcps1(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dcps2(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dcps3(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dc_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dgh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dmb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn drps(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dsb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dup_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dup_advsimd_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn dvp_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eon(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eon_eor_z_zi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eor3_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eor_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eor_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eor_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn eret(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ereta(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn esb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn extr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ext_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fabd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fabs_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fabs_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn facge_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn facgt_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn facle_facge_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn faclt_facge_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn faddp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn faddp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fadd_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcadd_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fccmpe_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fccmp_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmeq_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmeq_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmge_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmge_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmgt_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmgt_advsimd_zero(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmla_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmle_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmle_fcmeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmlt_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmlt_fcmeq_p_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmpe_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcmp_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcsel_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtas_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtas_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtau_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtau_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtms_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtms_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtmu_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtmu_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtns_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtns_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtnu_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtnu_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtps_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtps_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtpu_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtpu_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtxn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzs_advsimd_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzs_advsimd_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzs_float_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzs_float_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzu_advsimd_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzu_advsimd_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzu_float_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvtzu_float_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fcvt_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fdiv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fdiv_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fjcvtzs(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmadd_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxnmp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxnmp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxnmv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxnm_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxnm_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmaxv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmax_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmax_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminnmp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminnmp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminnmv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminnm_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminnm_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminp_advsimd_pair(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminp_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fminv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmin_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmin_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmlal_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmlal_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmla_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmlsl_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmlsl_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmls_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmls_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_cpy_z_p_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_dup_z_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_fcpy_z_p_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_fdup_z_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_float_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmov_float_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmsub_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmulx_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmulx_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmul_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmul_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fmul_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fneg_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fneg_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fnmadd_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fnmsub_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fnmul_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frecpe_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frecps_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frecpx_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint32x_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint32x_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint32z_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint32z_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint64x_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint64x_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint64z_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frint64z_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frinta_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frinta_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frinti_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frinti_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintm_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintm_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintn_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintp_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintx_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintx_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintz_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frintz_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frsqrte_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn frsqrts_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fsqrt_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fsqrt_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fsub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn fsub_float(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn gmi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn hint(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn hlt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn hvc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ic_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ins_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ins_advsimd_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn irg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn isb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld1r_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld1_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld1_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld2r_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld2_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld2_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld3r_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld3_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld3_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld4r_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld4_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld4_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ld64b(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldadd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaddb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaddh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaprb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaprh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapurb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapurh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapursb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapursh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapursw(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldapur_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldar(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldarb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldarh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaxp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaxr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaxrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldaxrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldclr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldclrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldclrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldeor(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldeorb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldeorh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldgm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldlar(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldlarb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldlarh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldnp_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldnp_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldpsw(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldp_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldp_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldra(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrb_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrb_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrh_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrh_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsb_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsb_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsh_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsh_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsw_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsw_lit(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldrsw_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_imm_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_imm_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_lit_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_lit_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_reg_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldr_reg_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldset(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsetb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldseth(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsmax(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsmaxb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsmaxh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsmin(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsminb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldsminh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtrsb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtrsh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldtrsw(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldumax(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldumaxb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldumaxh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldumin(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn lduminb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn lduminh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldurb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldurh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldursb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldursh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldursw(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldur_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldur_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldxp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldxr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldxrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ldxrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn lslv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn lsrv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn madd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mla_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mls_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mls_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mneg_msub(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movi_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movk(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movn(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movs_ands_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movs_orrs_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn movz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_add_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_dup_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_ins_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_ins_advsimd_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_movn(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_movz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_orr_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_orr_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_orr_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_umov_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_and_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_cpy_z_o_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_cpy_z_p_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_cpy_z_p_r(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_cpy_z_p_v(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_dup_z_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_dup_z_r(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_dup_z_zi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_dupm_z_i(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_mova_z_p_rza(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_mova_za_p_rz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_orr_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_orr_z_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_sel_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mov_sel_z_p_zz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mrs(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn msr_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn msr_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn msub(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mul_madd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mul_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mul_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mvni_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mvn_not_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn mvn_orn_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn negs_subs_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn neg_sub_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn neg_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ngcs_sbcs(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ngc_sbc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn nop(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn nots_eors_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn not_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn not_eor_p_p_pp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orn_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orn_orr_z_zi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orr_advsimd_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orr_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orr_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn orr_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pacda(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pacdb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pacga(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pacia(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pacib(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pmull_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pmul_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn prfm_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn prfm_lit(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn prfm_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn prfum(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn psb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn pssbb_dsb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn raddhn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rax1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rbit_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rbit_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ret(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn reta(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev16_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev16_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev32_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev32_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev64_rev(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rev64_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rmif(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rorv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ror_extr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ror_rorv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rshrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn rsubhn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sabal_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn saba_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sabdl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sabd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sadalp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn saddlp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn saddlv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn saddl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn saddw_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sbc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sbcs(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sbfiz_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sbfx_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn scvtf_advsimd_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn scvtf_advsimd_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn scvtf_float_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn scvtf_float_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sdiv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sdot_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sdot_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn setf(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sev(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sevl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1c_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1h_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1m_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1p_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1su0_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha1su1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha256h2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha256h_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha256su0_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha256su1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha512h2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha512h_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha512su0_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sha512su1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn shadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn shll_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn shl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn shrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn shsub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sli_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3partw1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3partw2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3ss1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3tt1a_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3tt1b_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3tt2a_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm3tt2b_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm4ekey_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sm4e_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smaddl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smaxp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smaxv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smax_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sminp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sminv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smin_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smlal_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smlal_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smlsl_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smlsl_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smmla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smnegl_smsubl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smov_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smstart_msr_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smstop_msr_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smsubl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smulh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smull_smaddl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smull_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn smull_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqabs_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmlal_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmlal_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmlsl_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmlsl_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmulh_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmulh_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmull_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqdmull_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqneg_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmlah_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmlah_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmlsh_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmlsh_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmulh_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrdmulh_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrshl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrshrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqrshrun_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqshlu_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqshl_advsimd_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqshl_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqshrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqshrun_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqsub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqxtn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sqxtun_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn srhadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sri_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn srshl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn srshr_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn srsra_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ssbb_dsb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sshll_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sshl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sshr_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ssra_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ssubl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ssubw_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st1_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st1_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st2g(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st2_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st2_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st3_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st3_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st4_advsimd_mult(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st4_advsimd_sngl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st64b(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st64bv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn st64bv0(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn staddb_ldaddb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn staddh_ldaddh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stadd_ldadd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stclrb_ldclrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stclrh_ldclrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stclr_ldclr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn steorb_ldeorb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn steorh_ldeorh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn steor_ldeor(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stgm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stgp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stllr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stllrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stllrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlurb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlurh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlur_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlxp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlxr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlxrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stlxrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stnp_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stnp_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stp_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stp_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn strb_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn strb_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn strh_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn strh_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn str_imm_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn str_imm_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn str_reg_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn str_reg_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsetb_ldsetb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stseth_ldseth(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stset_ldset(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsmaxb_ldsmaxb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsmaxh_ldsmaxh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsmax_ldsmax(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsminb_ldsminb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsminh_ldsminh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stsmin_ldsmin(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sttr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sttrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sttrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stumaxb_ldumaxb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stumaxh_ldumaxh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stumax_ldumax(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stuminb_lduminb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stuminh_lduminh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stumin_ldumin(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sturb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sturh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stur_fpsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stur_gen(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stxp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stxr(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stxrb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stxrh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stz2g(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stzg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn stzgm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subhn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subps(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subs_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subs_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn subs_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sub_addsub_ext(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sub_addsub_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sub_addsub_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sudot_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn suqadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn svc(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn swp(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn swpb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn swph(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sxtb_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sxth_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sxtl_sshll_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sxtw_sbfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn sysl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tbl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tbnz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tbx_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tbz(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tcancel(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tcommit(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tlbi_sys(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn trn1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn trn2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tsb(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tstart(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tst_ands_log_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn tst_ands_log_shift(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ttest(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uabal_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uaba_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uabdl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uabd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uadalp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uaddlp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uaddlv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uaddl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uaddw_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ubfiz_ubfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ubfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ubfx_ubfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ucvtf_advsimd_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ucvtf_advsimd_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ucvtf_float_fix(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ucvtf_float_int(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn udf_perm_undef(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn udiv(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn udot_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn udot_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uhadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uhsub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umaddl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umaxp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umaxv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umax_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uminp_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uminv_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umin_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umlal_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umlal_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umlsl_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umlsl_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ummla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umnegl_umsubl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umov_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umsubl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umulh(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umull_umaddl(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umull_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn umull_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqrshl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqrshrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqshl_advsimd_imm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqshl_advsimd_reg(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqshrn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqsub_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uqxtn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn urecpe_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn urhadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn urshl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn urshr_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ursqrte_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ursra_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usdot_advsimd_elt(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usdot_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ushll_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ushl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn ushr_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usmmla_advsimd_vec(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usqadd_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usra_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usubl_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn usubw_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uxtb_ubfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uxth_ubfm(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uxtl_ushll_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uzp1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn uzp2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn wfe(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn wfet(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn wfi(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn wfit(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn xaflag(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn xar_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn xpac(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn xtn_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn yield_insn(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn zip1_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }
    fn zip2_advsimd(&mut self, args: ArmInstr) -> bool { panic!(); }

}